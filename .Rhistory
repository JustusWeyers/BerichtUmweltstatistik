predictors = modeldata |>
select(-one_of(response))
# Kartenansicht der Daten
tm_shape(sf(data)) + tm_dots(col = response)
# Neue Spalte anlegen mit Namen der Straten
data = data %>%
mutate(StratumName = case_when(
Stratum == 1 ~ "Talsand",
Stratum == 2 ~ "Übergang",
Stratum == 3 ~ "Feuchtwiese"
))
# Modellerstellung
linModel = lm(Bodenfeuchte_Prozent ~ ., data = modeldata)
# Vorhersage und Fehler speichern
data = pred(name = "linModel", model = linModel, predictors = predictors,
data = data, response = response)
# RMSE
rmse(actual = data[!is.na(data$linModel), response],
predicted = data[!is.na(data$linModel), "linModel"])
# VIF
vif(linModel)
out <- barplot(vif(linModel), main="", names.arg="")
text(out, rep(-.1, 6), c("Tiefe zum Ox.horizont", "Mächtigkeit Ox.horizont", "Mächtigkeit_A", "Mächtigkeit_AL", "Geländehöhe"), srt=45, pos=2, xpd=NA, cex=.75)
text(x = out, y= vif(linModel),
label = paste(round(vif(linModel),3)),
pos = 1, cex = 0.8, col = "red")
# Mögliche lineare Modelle nach Güte untersuchen und ordnen
res = glmulti(linModel, level = 1, method = "h", confsetsize = 8, crit = "AIC")
# AICs
plot(res)
mean(res@crits)
# Wichtigkeit von Prädiktoren
plot(res, type = "s")
# Das beste Modell
bestlinModel = res@objects[[1]]
summary(bestlinModel)
plot(bestlinModel)
# Vorhersage und Fehler speichern
data = pred(name = "bestlinModel", model = bestlinModel,
predictors = predictors, data = data,
response = response)
var(yobs = data[!is.na(data$bestlinModel), response], ymod = na.omit(data$bestlinModel))
# RMSE
rmse(actual = data[!is.na(data$bestlinModel), response],
predicted = data[!is.na(data$bestlinModel), "bestlinModel"])
# Bestes lineares Model
ggplot(data |> drop_na(bestlinModel), aes(x = Bodenfeuchte_Prozent, y = bestlinModel))+
geom_point(aes(col = StratumName))+
labs(x = "Messwerte", y = "Vorhersage", caption = "Bodenfeuchte [%]", colour = "Stratum")+
geom_abline(slope = 1) + annotate("text", x = 52, y = 45, label = "y = 1x")
ggplot(data |> drop_na(errbestlinModel), aes(x = StratumName, y = errbestlinModel)) +
geom_boxplot(aes(fill = StratumName)) +
labs(x = "", y = "Fehlerquadratsumme")+
theme(legend.position="none")
ggplot(data |> drop_na(errbestlinModel), aes(x = StratumName, y = errbestlinModel)) +
geom_boxplot(aes(fill = StratumName)) +
labs(x = "", y = "wurzel aus Fehlerquadratsumme")+
theme(legend.position="none")
ggplot(data |> drop_na(errbestlinModel), aes(x = StratumName, y = errbestlinModel)) +
geom_boxplot(aes(fill = StratumName)) +
labs(x = "", y = "Wurzel aus Fehlerquadratsumme")+
theme(legend.position="none")
ggplot(data |> drop_na(errlinModel), aes(x = StratumName, y = errlinModel)) +
geom_boxplot(aes(fill = StratumName)) +
labs(x = "", y = "Wurzel aus Fehlerquadratsumme")+
theme(legend.position="none")
ggplot(data |> drop_na(errlinModel), aes(x = StratumName, y = errlinModel)) +
geom_boxplot(aes(fill = StratumName)) +
labs(x = "", y = "Wurzel aus Fehlerquadratsumme")+
theme(legend.position="none")
data |>
# Dataframe umgestalten. Spalte mit OOB/INB hinzufügen.
pivot_longer(cols=c("OOB", "INB"), names_to='Vorhersagetyp',
values_to='Prediction') |>
# Zeilen ohne vorhersagewerte löschen
drop_na(Prediction) |>
# ggplot
ggplot(aes(x = Bodenfeuchte_Prozent, y = Prediction, col = Vorhersagetyp)) +
geom_point() +
scale_color_manual(values = c("palegreen4", "palegreen2")) +
theme_bw()
# Baum erstellen
treeModel = tree(Bodenfeuchte_Prozent ~ ., data = modeldata)
# Vorhersage und Fehler speichern
data = pred(name = "treeModel", model = treeModel,
predictors = predictors, data = data,
response = response)
# Baumplot
{plot(treeModel);text(treeModel)}
# Wald anlegen
randomForest = randomForest(Bodenfeuchte_Prozent ~ ., data = modeldata)
# OOB-INB Geschichte
oob = predict(randomForest)
data = pred(name = "OOB", predictions = oob, data = data, response = response)
inb = predict(randomForest, newdata = predictors)
data = pred(name = "INB", predictions = inb, data = data, response = response)
var(yobs = data[!is.na(data$OOB), response], ymod = na.omit(data$OOB))
var(yobs = data[!is.na(data$INB), response], ymod = na.omit(data$INB))
data |>
# Dataframe umgestalten. Spalte mit OOB/INB hinzufügen.
pivot_longer(cols=c("OOB", "INB"), names_to='Vorhersagetyp',
values_to='Prediction') |>
# Zeilen ohne vorhersagewerte löschen
drop_na(Prediction) |>
# ggplot
ggplot(aes(x = Bodenfeuchte_Prozent, y = Prediction, col = Vorhersagetyp)) +
geom_point() +
scale_color_manual(values = c("palegreen4", "palegreen2")) +
theme_bw()
# Variableneinfluss
importance = randomForest(Bodenfeuchte_Prozent ~ ., data = modeldata,
importance = TRUE)
varImpPlot(importance, type = "1")
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("errlinModel", "errbestlinModel", "errtreeModel", "errOOB", "errINB"),
names_to='Modeltype', values_to='SquaredError') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(SquaredError) |>
# ggplot
ggplot(aes(x = StratumName, y = SquaredError, fill = Modeltype)) +
geom_boxplot() + theme_bw()
View(data)
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("errlinModel", "errbestlinModel", "errtreeModel", "errOOB", "errINB"),
names_to='Modeltype', values_to='RootsquaredError') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(RootsquaredError) |>
# ggplot
ggplot(aes(x = StratumName, y = RootsquaredError, fill = Modeltype)) +
geom_boxplot() + theme_bw()
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("errlinModel", "errbestlinModel", "errtreeModel", "errOOB", "errINB"),
names_to='Modeltype', values_to='RootsquaredError') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(RootsquaredError) |>
# ggplot
ggplot(aes(x = StratumName, y = RootsquaredError, fill = Modeltype), xlab = "", ylab = "Wurzel aus Fehlerquadratsumme") +
geom_boxplot() + theme_bw()
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("errlinModel", "errbestlinModel", "errtreeModel", "errOOB", "errINB"),
names_to='Modeltype', values_to='RootsquaredError') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(RootsquaredError) |>
# ggplot
ggplot(aes(x = StratumName, y = RootsquaredError, fill = Modeltype)) +
geom_boxplot() + theme_bw()+
labels(xlab = "", ylab = "Wurzel aus Fehlerquadratsumme")
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("errlinModel", "errbestlinModel", "errtreeModel", "errOOB", "errINB"),
names_to='Modeltype', values_to='RootsquaredError') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(RootsquaredError) |>
# ggplot
ggplot(aes(x = StratumName, y = RootsquaredError, fill = Modeltype)) +
geom_boxplot() + theme_bw()+
labs(xlab = "", ylab = "Wurzel aus Fehlerquadratsumme")
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("errlinModel", "errbestlinModel", "errtreeModel", "errOOB", "errINB"),
names_to='Modeltype', values_to='RootsquaredError') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(RootsquaredError) |>
# ggplot
ggplot(aes(x = StratumName, y = RootsquaredError, fill = Modeltype)) +
geom_boxplot() + theme_bw()+
labs(x = "", y = "Wurzel aus Fehlerquadratsumme")
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("errlinModel", "errbestlinModel", "errtreeModel", "errOOB", "errINB"),
names_to='Modeltype', values_to='RootsquaredError') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(RootsquaredError) |>
# ggplot
ggplot(aes(x = StratumName, y = RootsquaredError, fill = Modeltype)) +
geom_boxplot() + theme_bw()+
labs(x = "", y = "Wurzel aus Fehlerquadratsumme", fill = "Modeltyp")
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("errlinModel", "errbestlinModel", "errtreeModel", "errOOB", "errINB"),
names_to='Modeltype', values_to='RootsquaredError') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(RootsquaredError) |>
# ggplot
ggplot(aes(x = StratumName, y = RootsquaredError, fill = Modeltype)) +
geom_boxplot() + theme_bw()+
labs(x = "", y = "Wurzel aus Fehlerquadratsumme", fill = "Modeltyp")+
scale_fill_discrete(labels=c("Bestes lineares Modell", "RF-INB", "Einfaches lineares Modell", "RF-OOB", "CART"))
View(data)
View(data)
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("errlinModel", "errbestlinModel", "errtreeModel", "errOOB", "errINB"),
names_to='Modeltype', values_to='RootsquaredError') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(RootsquaredError) |>
# ggplot
ggplot(aes(x = StratumName, y = RootsquaredError, fill = Modeltype)) +
geom_boxplot() + theme_bw()+
labs(x = "", y = "Wurzel aus Fehlerquadratsumme", fill = "Modelltyp")+
scale_fill_discrete(labels=c("Bestes lineares Modell", "RF-INB", "Einfaches lineares Modell", "RF-OOB", "CART"))
View(data)
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("errlinModel", "errbestlinModel", "errtreeModel", "errOOB", "errINB"),
names_to='Modeltype', values_to='RootsquaredError') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(RootsquaredError) |>
# ggplot
ggplot(aes(x = StratumName, y = RootsquaredError, fill = Modeltype)) +
geom_boxplot() + theme_bw()+
labs(x = "", y = "Wurzel aus Fehlerquadratsumme", fill = "Modelltyp")+
scale_fill_discrete(labels=c("Bestes lineares Modell", "RF-INB", "Einfaches lineares Modell", "RF-OOB", "CART"))
View(data)
View(data)
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("linModel", "bestlinModel", "treeModel", "OOB", "INB"),
names_to='Modeltype', values_to='predictions') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(predictions) |>
# ggplot
ggplot(aes(x = StratumName, y = predictions, colour = Modeltype)) +
geom_line() + theme_bw()+
labs(x = "", y = "Wurzel aus Fehlerquadratsumme", fill = "Modelltyp")+
scale_fill_discrete(labels=c("Bestes lineares Modell", "RF-INB", "Einfaches lineares Modell", "RF-OOB", "CART"))
View(data)
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("linModel", "bestlinModel", "treeModel", "OOB", "INB"),
names_to='Modeltype', values_to='predictions') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(predictions) |>
# ggplot
ggplot(aes(x = Bodenfeuchte_Prozent, y = predictions, colour = Modeltype)) +
#geom_line() + theme_bw()+
#labs(x = "", y = "", fill = "Modelltyp")+
# scale_fill_discrete(labels=c("Bestes lineares Modell", "RF-INB", "Einfaches lineares Modell", "RF-OOB", "CART"))
```
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("linModel", "bestlinModel", "treeModel", "OOB", "INB"),
names_to='Modeltype', values_to='predictions') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(predictions) |>
# ggplot
ggplot(aes(x = Bodenfeuchte_Prozent, y = predictions, colour = Modeltype)) +
geom_line() + theme_bw()+
#labs(x = "", y = "", fill = "Modelltyp")+
# scale_fill_discrete(labels=c("Bestes lineares Modell", "RF-INB", "Einfaches lineares Modell", "RF-OOB", "CART"))
```
y <- seq(0, 30, 1)
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("linModel", "bestlinModel", "treeModel", "OOB", "INB"),
names_to='Modeltype', values_to='predictions') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(predictions) |>
# ggplot
ggplot(aes(x = Bodenfeuchte_Prozent, y = seq(0,30,1), colour = Modeltype)) +
geom_line(aes(color = Modeltype)) + theme_bw()
library(tidyverse)
# Plots
library(GGally)
library(corrplot)
# Statistik
library(Metrics)
# Geo-Pakete
library(sf)
library(tmap)
# Lineare Modelle
library(glmulti)
library(car) # vif
library(visreg)
# Baumbasierte Modelle
#install.packages("tree")
#install.packages("quantregForest")
library(tree)
library(randomForest)
library(quantregForest)
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("linModel", "bestlinModel", "treeModel", "OOB", "INB"),
names_to='Modeltype', values_to='predictions') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(predictions) |>
# ggplot
ggplot(aes(x = Bodenfeuchte_Prozent, y = seq(0,30,1), colour = Modeltype)) +
geom_line(aes(color = Modeltype)) + theme_bw()
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("linModel", "bestlinModel", "treeModel", "OOB", "INB"),
names_to='Modeltype', values_to='predictions') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(predictions) |>
# ggplot
ggplot(aes(x = Bodenfeuchte_Prozent, y = predictions, colour = Modeltype)) +
geom_line(aes(color = Modeltype)) + theme_bw()
labs(x = "Messwerte", y = "Vorersage", color = "Modelltyp")+
scale_fill_discrete(labels=c("Bestes lineares Modell", "RF-INB", "Einfaches lineares Modell", "RF-OOB", "CART"))
labs(x = "Messwerte", y = "Vorersage", color = "Modelltyp")+
scale_fill_discrete(labels=c("Bestes lineares Modell", "RF-INB", "Einfaches lineares Modell", "RF-OOB", "CART"))
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("linModel", "bestlinModel", "treeModel", "OOB", "INB"),
names_to='Modeltype', values_to='predictions') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(predictions) |>
# ggplot
ggplot(aes(x = Bodenfeuchte_Prozent, y = predictions, colour = Modeltype)) +
geom_line(aes(color = Modeltype)) + theme_bw()+
labs(x = "Messwerte", y = "Vorersage", color = "Modelltyp")+
scale_fill_discrete(labels=c("Bestes lineares Modell", "RF-INB", "Einfaches lineares Modell", "RF-OOB", "CART"))
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("linModel", "bestlinModel", "treeModel", "OOB", "INB"),
names_to='Modeltype', values_to='predictions') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(predictions) |>
# ggplot
ggplot(aes(x = Bodenfeuchte_Prozent, y = predictions, colour = Modeltype)) +
geom_line(aes(color = Modeltype)) + theme_bw()+
labs(x = "Messwerte", y = "Vorhersage", color = "Modelltyp") +
scale_fill_discrete(labels=c("Bestes lineares Modell", "RF-INB", "Einfaches lineares Modell", "RF-OOB", "CART"))
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("linModel", "bestlinModel", "treeModel", "OOB", "INB"),
names_to='Modeltype', values_to='predictions') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(predictions) |>
# ggplot
ggplot(aes(x = Bodenfeuchte_Prozent, y = predictions, colour = Modeltype)) +
geom_line(aes(color = Modeltype)) + theme_bw()+
labs(x = "Messwerte", y = "Vorhersage", color = "Modelltyp") +
scale_color_manual(labels=c("Bestes lineares Modell", "RF-INB", "Einfaches lineares Modell", "RF-OOB", "CART"))
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("linModel", "bestlinModel", "treeModel", "OOB", "INB"),
names_to='Modeltype', values_to='predictions') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(predictions) |>
# ggplot
ggplot(aes(x = Bodenfeuchte_Prozent, y = predictions, colour = Modeltype)) +
geom_line(aes(color = Modeltype)) + theme_bw()+
labs(x = "Messwerte", y = "Vorhersage", color = "Modelltyp") +
scale_fill_discrete(labels=c("Bestes lineares Modell", "RF-INB", "Einfaches lineares Modell", "RF-OOB", "CART"))
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("linModel", "bestlinModel", "treeModel", "OOB", "INB"),
names_to='Modeltype', values_to='predictions') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(predictions) |>
# ggplot
ggplot(aes(x = Bodenfeuchte_Prozent, y = predictions, colour = Modeltype)) +
geom_line(aes(color = Modeltype)) + theme_bw()+
labs(x = "Messwerte", y = "Vorhersage", color = "Modelltyp") +
scale_fill_discrete(labels=c("Bestes lineares Modell", "RF-INB", "Einfaches lineares Modell", "RF-OOB", "CART"), breaks = c("bestlinModel", "INB", "linModel", "OOB", "treeModel"))
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("linModel", "bestlinModel", "treeModel", "OOB", "INB"),
names_to='Modeltype', values_to='predictions') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(predictions) |>
# ggplot
ggplot(aes(x = Bodenfeuchte_Prozent, y = predictions, colour = Modeltype)) +
geom_line(aes(color = Modeltype)) + theme_bw()+
labs(x = "Messwerte", y = "Vorhersage", color = "Modelltyp") +
scale_fill_discrete(breaks = c("bestlinModel", "INB", "linModel", "OOB", "treeModel"), labels=c("Bestes lineares Modell", "RF-INB", "Einfaches lineares Modell", "RF-OOB", "CART"))
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("linModel", "bestlinModel", "treeModel", "OOB", "INB"),
names_to='Modeltype', values_to='predictions') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(predictions) |>
# ggplot
ggplot(aes(x = Bodenfeuchte_Prozent, y = predictions, colour = Modeltype)) +
geom_line(aes(color = Modeltype)) + theme_bw()+
labs(x = "Messwerte", y = "Vorhersage") +
scale_fill_discrete(names = "Modelltyp", breaks = c("bestlinModel", "INB", "linModel", "OOB", "treeModel"), labels=c("Bestes lineares Modell", "RF-INB", "Einfaches lineares Modell", "RF-OOB", "CART"))
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("linModel", "bestlinModel", "treeModel", "OOB", "INB"),
names_to='Modeltype', values_to='predictions') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(predictions) |>
# ggplot
ggplot(aes(x = Bodenfeuchte_Prozent, y = predictions, colour = Modeltype)) +
geom_line(aes(color = Modeltype)) + theme_bw()+
labs(x = "Messwerte", y = "Vorhersage") +
scale_fill_discrete(name = "Modelltyp", breaks = c("bestlinModel", "INB", "linModel", "OOB", "treeModel"), labels=c("Bestes lineares Modell", "RF-INB", "Einfaches lineares Modell", "RF-OOB", "CART"))
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("linModel", "bestlinModel", "treeModel", "OOB", "INB"),
names_to='Modeltype', values_to='predictions') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(predictions) |>
# ggplot
ggplot(aes(x = Bodenfeuchte_Prozent, y = predictions, colour = Modeltype)) +
geom_line(aes(color = Modeltype)) + theme_bw()+
labs(x = "Messwerte", y = "Vorhersage") +
scale_shape_discrete(name = "Modelltyp", breaks = c("bestlinModel", "INB", "linModel", "OOB", "treeModel"), labels=c("Bestes lineares Modell", "RF-INB", "Einfaches lineares Modell", "RF-OOB", "CART"))
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("linModel", "bestlinModel", "treeModel", "OOB", "INB"),
names_to='Modeltype', values_to='predictions') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(predictions) |>
# ggplot
ggplot(aes(x = Bodenfeuchte_Prozent, y = predictions, colour = Modeltype)) +
geom_line(aes(color = Modeltype)) + theme_bw()+
labs(x = "Messwerte", y = "Vorhersage") +
scale_shape_discrete(name = "Modelltyp", breaks = c("bestlinModel", "INB", "linModel", "OOB", "treeModel"), labels=c("Bestes lineares Modell", "RF-INB", "Einfaches lineares Modell", "RF-OOB", "CART"))+
scale_color_discrete(name = "Modelltyp", breaks = c("bestlinModel", "INB", "linModel", "OOB", "treeModel"), labels=c("Bestes lineares Modell", "RF-INB", "Einfaches lineares Modell", "RF-OOB", "CART"))
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("linModel", "bestlinModel", "treeModel", "OOB", "INB"),
names_to='Modeltype', values_to='predictions') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(predictions) |>
# ggplot
ggplot(aes(x = Bodenfeuchte_Prozent, y = predictions, colour = Modeltype)) +
geom_line(aes(color = Modeltype)) + theme_bw()+
labs(x = "Messwerte", y = "Vorhersage") +
scale_color_discrete(name = "Modelltyp", breaks = c("bestlinModel", "INB", "linModel", "OOB", "treeModel"), labels=c("Bestes lineares Modell", "RF-INB", "Einfaches lineares Modell", "RF-OOB", "CART"))
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("linModel", "bestlinModel", "treeModel", "OOB", "INB"),
names_to='Modeltype', values_to='predictions') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(predictions) |>
# ggplot
ggplot(aes(x = Bodenfeuchte_Prozent, y = predictions, colour = Modeltype)) +
geom_line(aes(color = Modeltype)) + theme_bw()+
labs(x = "Messwerte", y = "Vorhersage") +
scale_color_discrete(name = "Modelltyp", breaks = c("bestlinModel", "INB", "linModel", "OOB", "treeModel"), labels=c("Bestes lineares Modell", "RF-INB", "Einfaches lineares Modell", "RF-OOB", "CART"))
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("linModel", "bestlinModel", "treeModel", "OOB", "INB"),
names_to='Modeltype', values_to='predictions') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(predictions) |>
# ggplot
ggplot(aes(x = Bodenfeuchte_Prozent, y = predictions, colour = Modeltype)) +
geom_line(aes(color = Modeltype)) + theme_bw()+
labs(x = "Messwerte", y = "Vorhersage") +
scale_color_discrete(name = "Modelltyp", breaks = c("bestlinModel", "INB", "linModel", "OOB", "treeModel"), labels=c("Bestes lineares Modell", "RF-INB", "Einfaches lineares Modell", "RF-OOB", "CART"))+
geom_abline(slope = 1) + annotate("text", x = 52, y = 45, label = "y = 1x")
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("linModel", "bestlinModel", "treeModel", "OOB", "INB"),
names_to='Modeltype', values_to='predictions') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(predictions) |>
# ggplot
ggplot(aes(x = Bodenfeuchte_Prozent, y = predictions, colour = Modeltype)) +
geom_line(aes(color = Modeltype)) + theme_bw()+
labs(x = "Messwerte", y = "Vorhersage") +
scale_color_discrete(name = "Modelltyp", breaks = c("bestlinModel", "INB", "linModel", "OOB", "treeModel"), labels=c("Bestes lineares Modell", "RF-INB", "Einfaches lineares Modell", "RF-OOB", "CART"))+
geom_abline(slope = 1) + annotate("text", x = 10, y = 5, label = "y = 1x")
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("linModel", "bestlinModel", "treeModel", "OOB", "INB"),
names_to='Modeltype', values_to='predictions') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(predictions) |>
# ggplot
ggplot(aes(x = Bodenfeuchte_Prozent, y = predictions, colour = Modeltype)) +
geom_line(aes(color = Modeltype)) + theme_bw()+
labs(x = "Messwerte", y = "Vorhersage") +
scale_color_discrete(name = "Modelltyp", breaks = c("bestlinModel", "INB", "linModel", "OOB", "treeModel"), labels=c("Bestes lineares Modell", "RF-INB", "Einfaches lineares Modell", "RF-OOB", "CART"))+
geom_abline(slope = 1) + annotate("text", x = 15, y = 5, label = "y = 1x")
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("linModel", "bestlinModel", "treeModel", "OOB", "INB"),
names_to='Modeltype', values_to='predictions') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(predictions) |>
# ggplot
ggplot(aes(x = Bodenfeuchte_Prozent, y = predictions, colour = Modeltype)) +
geom_line(aes(color = Modeltype)) + theme_bw()+
labs(x = "Messwerte", y = "Vorhersage") +
scale_color_discrete(name = "Modelltyp", breaks = c("bestlinModel", "INB", "linModel", "OOB", "treeModel"), labels=c("Bestes lineares Modell", "RF-INB", "Einfaches lineares Modell", "RF-OOB", "CART"))+
geom_abline(slope = 1) + annotate("text", x = 13, y = 5, label = "y = 1x")
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("linModel", "bestlinModel", "treeModel", "OOB", "INB"),
names_to='Modeltype', values_to='predictions') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(predictions) |>
# ggplot
ggplot(aes(x = Bodenfeuchte_Prozent, y = predictions, colour = Modeltype)) +
geom_line(aes(color = Modeltype)) + theme_bw()+
labs(x = "Messwerte", y = "Vorhersage") +
scale_color_discrete(name = "Modelltyp", breaks = c("bestlinModel", "INB", "linModel", "OOB", "treeModel"), labels=c("Bestes lineares Modell", "RF-INB", "Einfaches lineares Modell", "RF-OOB", "CART"))+
geom_abline(slope = 1) + annotate("text", x = 13, y = 6, label = "y = 1x")
data |>
# Dataframe umgestalten. Spalte mit modelltyp hinzufügen.
pivot_longer(cols=c("linModel", "bestlinModel", "treeModel", "OOB", "INB"),
names_to='Modeltype', values_to='predictions') |>
# Entfernen von Zeilen mit NAs in der Error-Spalte
drop_na(predictions) |>
# ggplot
ggplot(aes(x = Bodenfeuchte_Prozent, y = predictions, colour = Modeltype)) +
geom_line(aes(color = Modeltype)) + theme_bw()+
labs(x = "Messwerte", y = "Vorhersage") +
scale_color_discrete(name = "Modelltyp", breaks = c("bestlinModel", "INB", "linModel", "OOB", "treeModel"), labels=c("Bestes lineares Modell", "RF-INB", "Einfaches lineares Modell", "RF-OOB", "CART"))+
geom_abline(slope = 1) + annotate("text", x = 13, y = 7, label = "y = 1x")
rm(y)
